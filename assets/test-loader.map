{"version":3,"sources":["assets/test-loader-orig.js"],"names":["define","addModuleIncludeMatcher","fn","moduleIncludeMatchers","push","addModuleExcludeMatcher","moduleExcludeMatchers","checkMatchers","matchers","moduleName","matcher","i","l","length","TestLoader","this","_didLogMissingUnsee","prototype","shouldLoadModule","match","listModules","Object","keys","requirejs","entries","loadModules","index","moduleNames","require","unsee","e","moduleLoadFailure","console","warn","error","stack","load","default"],"mappings":"CACA,WACAA,OAAO,2BAEL,WACE,YAKA,SAASC,GAAwBC,GAC/BC,EAAsBC,KAAKF,GAG7B,QAASG,GAAwBH,GAC/BI,EAAsBF,KAAKF,GAG7B,QAASK,GAAcC,EAAUC,GAG/B,IAAK,GAFDC,GAEKC,EAAI,EAAGC,EAAIJ,EAASK,OAAYD,EAAJD,EAAOA,IAG1C,IAFAD,EAAUF,EAASG,IAEPF,GACV,OAAO,CAIX,QAAO,EAGT,QAASK,KACPC,KAAKC,qBAAsB,EA1B7B,GAAIb,MACAG,IAmFJ,OAvDAQ,GAAWG,WACTC,iBAAkB,SAAST,GACzB,MAAQA,GAAWU,MAAM,cAG3BC,YAAa,WACX,MAAOC,QAAOC,KAAKC,UAAUC,UAG/BC,YAAa,WACX,GAAIhB,GAAYiB,EAAOb,EACnBc,EAAcZ,KAAKK,aAEvB,KAAKM,EAAQ,EAAGb,EAASc,EAAYd,OAAgBA,EAARa,EAAgBA,IAC3DjB,EAAakB,EAAYD,GAErBnB,EAAcD,EAAuBG,KAIrCF,EAAcJ,EAAuBM,IAAeM,KAAKG,iBAAiBT,MAC5EM,KAAKa,QAAQnB,GACbM,KAAKc,MAAMpB,MAMnBK,EAAWG,UAAUW,QAAU,SAASnB,GACtC,IACEmB,QAAQnB,GACR,MAAMqB,GACNf,KAAKgB,kBAAkBtB,EAAYqB,KAIxChB,EAAWG,UAAUY,MAAQ,SAASpB,GACP,kBAAlBmB,SAAQC,MACjBD,QAAQC,MAAMpB,GACJM,KAAKC,sBAChBD,KAAKC,qBAAsB,EACJ,mBAAZgB,UACTA,QAAQC,KAAK,oEAKjBnB,EAAWG,UAAUc,kBAAoB,SAAStB,EAAYyB,GAC5DF,QAAQE,MAAM,kBAAoBzB,EAAYyB,EAAMC,QAGtDrB,EAAWsB,KAAO,YAChB,GAAItB,IAAaW,gBAIjBY,UAAWvB,EACXb,wBAAyBA,EACzBI,wBAAyBA","file":"test-loader.js","sourcesContent":["/* globals requirejs, require */\n(function() {\ndefine(\"ember-cli/test-loader\",\n  [],\n  function() {\n    \"use strict\";\n\n    var moduleIncludeMatchers = [];\n    var moduleExcludeMatchers = [];\n\n    function addModuleIncludeMatcher(fn) {\n      moduleIncludeMatchers.push(fn);\n    };\n\n    function addModuleExcludeMatcher(fn) {\n      moduleExcludeMatchers.push(fn);\n    };\n\n    function checkMatchers(matchers, moduleName) {\n      var matcher;\n\n      for (var i = 0, l = matchers.length; i < l; i++) {\n        matcher = matchers[i];\n\n        if (matcher(moduleName)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    function TestLoader() {\n      this._didLogMissingUnsee = false;\n    };\n\n    TestLoader.prototype = {\n      shouldLoadModule: function(moduleName) {\n        return (moduleName.match(/[-_]test$/));\n      },\n\n      listModules: function() {\n        return Object.keys(requirejs.entries);\n      },\n\n      loadModules: function() {\n        var moduleName, index, length;\n        var moduleNames = this.listModules();\n\n        for (index = 0, length = moduleNames.length; index < length; index++) {\n          moduleName = moduleNames[index];\n\n          if (checkMatchers(moduleExcludeMatchers, moduleName)) {\n            continue;\n          }\n\n          if (checkMatchers(moduleIncludeMatchers, moduleName) || this.shouldLoadModule(moduleName)) {\n            this.require(moduleName);\n            this.unsee(moduleName);\n          }\n        }\n      }\n    };\n\n    TestLoader.prototype.require = function(moduleName) {\n      try {\n        require(moduleName);\n      } catch(e) {\n        this.moduleLoadFailure(moduleName, e);\n      }\n    };\n\n   TestLoader.prototype.unsee = function(moduleName) {\n     if (typeof require.unsee === 'function') {\n       require.unsee(moduleName);\n     } else if (!this._didLogMissingUnsee) {\n      this._didLogMissingUnsee = true;\n      if (typeof console !== 'undefined') {\n        console.warn('unable to require.unsee, please upgrade loader.js to >= v3.3.0');\n      }\n     }\n    };\n\n    TestLoader.prototype.moduleLoadFailure = function(moduleName, error) {\n      console.error('Error loading: ' + moduleName, error.stack);\n    };\n\n    TestLoader.load = function() {\n      new TestLoader().loadModules();\n    };\n\n    return {\n      'default': TestLoader,\n      addModuleIncludeMatcher: addModuleIncludeMatcher,\n      addModuleExcludeMatcher: addModuleExcludeMatcher\n    };\n  }\n);\n})();\n"]}